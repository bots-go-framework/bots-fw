// Code generated by "stringer -type=Type"; DO NOT EDIT.

package botinput

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeUnknown-0]
	_ = x[TypeNotImplemented-1]
	_ = x[TypeText-2]
	_ = x[TypeVoice-3]
	_ = x[TypePhoto-4]
	_ = x[TypeAudio-5]
	_ = x[TypeContact-6]
	_ = x[TypePostback-7]
	_ = x[TypeDelivery-8]
	_ = x[TypeAttachment-9]
	_ = x[TypeInlineQuery-10]
	_ = x[TypeCallbackQuery-11]
	_ = x[TypeReferral-12]
	_ = x[TypeChosenInlineResult-13]
	_ = x[TypeSubscribed-14]
	_ = x[TypeUnsubscribed-15]
	_ = x[TypeConversationStarted-16]
	_ = x[TypeNewChatMembers-17]
	_ = x[TypeLeftChatMembers-18]
	_ = x[TypeSticker-19]
	_ = x[TypeSharedUsers-20]
	_ = x[TypePreCheckoutQuery-21]
	_ = x[TypeSuccessfulPayment-22]
	_ = x[TypeRefundedPayment-23]
}

const _Type_name = "TypeUnknownTypeNotImplementedTypeTextTypeVoiceTypePhotoTypeAudioTypeContactTypePostbackTypeDeliveryTypeAttachmentTypeInlineQueryTypeCallbackQueryTypeReferralTypeChosenInlineResultTypeSubscribedTypeUnsubscribedTypeConversationStartedTypeNewChatMembersTypeLeftChatMembersTypeStickerTypeSharedUsersTypePreCheckoutQueryTypeSuccessfulPaymentTypeRefundedPayment"

var _Type_index = [...]uint16{0, 11, 29, 37, 46, 55, 64, 75, 87, 99, 113, 128, 145, 157, 179, 193, 209, 232, 250, 269, 280, 295, 315, 336, 355}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
