// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bots-go-framework/bots-fw/botsfw (interfaces: BotProfile)
//
// Generated by this command:
//
//	mockgen github.com/bots-go-framework/bots-fw/botsfw BotProfile
//

// Package mock_botsfw is a generated GoMock package.
package mock_botsfw

import (
	reflect "reflect"

	botsfwmodels "github.com/bots-go-framework/bots-fw-store/botsfwmodels"
	botsfw "github.com/bots-go-framework/bots-fw/botsfw"
	i18n "github.com/strongo/i18n"
	gomock "go.uber.org/mock/gomock"
)

// MockBotProfile is a mock of BotProfile interface.
type MockBotProfile struct {
	ctrl     *gomock.Controller
	recorder *MockBotProfileMockRecorder
	isgomock struct{}
}

// MockBotProfileMockRecorder is the mock recorder for MockBotProfile.
type MockBotProfileMockRecorder struct {
	mock *MockBotProfile
}

// NewMockBotProfile creates a new mock instance.
func NewMockBotProfile(ctrl *gomock.Controller) *MockBotProfile {
	mock := &MockBotProfile{ctrl: ctrl}
	mock.recorder = &MockBotProfileMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBotProfile) EXPECT() *MockBotProfileMockRecorder {
	return m.recorder
}

// DefaultLocale mocks base method.
func (m *MockBotProfile) DefaultLocale() i18n.Locale {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DefaultLocale")
	ret0, _ := ret[0].(i18n.Locale)
	return ret0
}

// DefaultLocale indicates an expected call of DefaultLocale.
func (mr *MockBotProfileMockRecorder) DefaultLocale() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DefaultLocale", reflect.TypeOf((*MockBotProfile)(nil).DefaultLocale))
}

// GetTranslations mocks base method.
func (m *MockBotProfile) GetTranslations() botsfw.BotTranslations {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTranslations")
	ret0, _ := ret[0].(botsfw.BotTranslations)
	return ret0
}

// GetTranslations indicates an expected call of GetTranslations.
func (mr *MockBotProfileMockRecorder) GetTranslations() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTranslations", reflect.TypeOf((*MockBotProfile)(nil).GetTranslations))
}

// ID mocks base method.
func (m *MockBotProfile) ID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ID")
	ret0, _ := ret[0].(string)
	return ret0
}

// ID indicates an expected call of ID.
func (mr *MockBotProfileMockRecorder) ID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ID", reflect.TypeOf((*MockBotProfile)(nil).ID))
}

// NewAppUserData mocks base method.
func (m *MockBotProfile) NewAppUserData() botsfwmodels.AppUserData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewAppUserData")
	ret0, _ := ret[0].(botsfwmodels.AppUserData)
	return ret0
}

// NewAppUserData indicates an expected call of NewAppUserData.
func (mr *MockBotProfileMockRecorder) NewAppUserData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewAppUserData", reflect.TypeOf((*MockBotProfile)(nil).NewAppUserData))
}

// NewBotChatData mocks base method.
func (m *MockBotProfile) NewBotChatData() botsfwmodels.BotChatData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewBotChatData")
	ret0, _ := ret[0].(botsfwmodels.BotChatData)
	return ret0
}

// NewBotChatData indicates an expected call of NewBotChatData.
func (mr *MockBotProfileMockRecorder) NewBotChatData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewBotChatData", reflect.TypeOf((*MockBotProfile)(nil).NewBotChatData))
}

// NewPlatformUserData mocks base method.
func (m *MockBotProfile) NewPlatformUserData() botsfwmodels.PlatformUserData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewPlatformUserData")
	ret0, _ := ret[0].(botsfwmodels.PlatformUserData)
	return ret0
}

// NewPlatformUserData indicates an expected call of NewPlatformUserData.
func (mr *MockBotProfileMockRecorder) NewPlatformUserData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewPlatformUserData", reflect.TypeOf((*MockBotProfile)(nil).NewPlatformUserData))
}

// Router mocks base method.
func (m *MockBotProfile) Router() botsfw.Router {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Router")
	ret0, _ := ret[0].(botsfw.Router)
	return ret0
}

// Router indicates an expected call of Router.
func (mr *MockBotProfileMockRecorder) Router() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Router", reflect.TypeOf((*MockBotProfile)(nil).Router))
}

// SupportedLocales mocks base method.
func (m *MockBotProfile) SupportedLocales() []i18n.Locale {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SupportedLocales")
	ret0, _ := ret[0].([]i18n.Locale)
	return ret0
}

// SupportedLocales indicates an expected call of SupportedLocales.
func (mr *MockBotProfileMockRecorder) SupportedLocales() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SupportedLocales", reflect.TypeOf((*MockBotProfile)(nil).SupportedLocales))
}
