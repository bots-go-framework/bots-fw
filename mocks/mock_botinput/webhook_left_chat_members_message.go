// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bots-go-framework/bots-fw/botinput (interfaces: LeftChatMembersMessage)
//
// Generated by this command:
//
//	mockgen github.com/bots-go-framework/bots-fw/botinput LeftChatMembersMessage
//

// Package mock_botinput is a generated GoMock package.
package mock_botinput

import (
	reflect "reflect"

	botinput "github.com/bots-go-framework/bots-fw/botinput"
	gomock "go.uber.org/mock/gomock"
)

// MockWebhookLeftChatMembersMessage is a mock of LeftChatMembersMessage interface.
type MockWebhookLeftChatMembersMessage struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookLeftChatMembersMessageMockRecorder
	isgomock struct{}
}

// MockWebhookLeftChatMembersMessageMockRecorder is the mock recorder for MockWebhookLeftChatMembersMessage.
type MockWebhookLeftChatMembersMessageMockRecorder struct {
	mock *MockWebhookLeftChatMembersMessage
}

// NewMockWebhookLeftChatMembersMessage creates a new mock instance.
func NewMockWebhookLeftChatMembersMessage(ctrl *gomock.Controller) *MockWebhookLeftChatMembersMessage {
	mock := &MockWebhookLeftChatMembersMessage{ctrl: ctrl}
	mock.recorder = &MockWebhookLeftChatMembersMessageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookLeftChatMembersMessage) EXPECT() *MockWebhookLeftChatMembersMessageMockRecorder {
	return m.recorder
}

// BotChatID mocks base method.
func (m *MockWebhookLeftChatMembersMessage) BotChatID() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BotChatID")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BotChatID indicates an expected call of BotChatID.
func (mr *MockWebhookLeftChatMembersMessageMockRecorder) BotChatID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BotChatID", reflect.TypeOf((*MockWebhookLeftChatMembersMessage)(nil).BotChatID))
}

// LeftChatMembers mocks base method.
func (m *MockWebhookLeftChatMembersMessage) LeftChatMembers() []botinput.Actor {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LeftChatMembers")
	ret0, _ := ret[0].([]botinput.Actor)
	return ret0
}

// LeftChatMembers indicates an expected call of LeftChatMembers.
func (mr *MockWebhookLeftChatMembersMessageMockRecorder) LeftChatMembers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LeftChatMembers", reflect.TypeOf((*MockWebhookLeftChatMembersMessage)(nil).LeftChatMembers))
}
