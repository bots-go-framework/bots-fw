// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bots-go-framework/bots-fw/botinput (interfaces: WebhookEntry)
//
// Generated by this command:
//
//	mockgen github.com/bots-go-framework/bots-fw/botinput WebhookEntry
//

// Package mock_botinput is a generated GoMock package.
package mock_botinput

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockWebhookEntry is a mock of WebhookEntry interface.
type MockWebhookEntry struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookEntryMockRecorder
	isgomock struct{}
}

// MockWebhookEntryMockRecorder is the mock recorder for MockWebhookEntry.
type MockWebhookEntryMockRecorder struct {
	mock *MockWebhookEntry
}

// NewMockWebhookEntry creates a new mock instance.
func NewMockWebhookEntry(ctrl *gomock.Controller) *MockWebhookEntry {
	mock := &MockWebhookEntry{ctrl: ctrl}
	mock.recorder = &MockWebhookEntryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookEntry) EXPECT() *MockWebhookEntryMockRecorder {
	return m.recorder
}

// GetID mocks base method.
func (m *MockWebhookEntry) GetID() any {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(any)
	return ret0
}

// GetID indicates an expected call of GetID.
func (mr *MockWebhookEntryMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockWebhookEntry)(nil).GetID))
}

// GetTime mocks base method.
func (m *MockWebhookEntry) GetTime() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTime")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetTime indicates an expected call of GetTime.
func (mr *MockWebhookEntryMockRecorder) GetTime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTime", reflect.TypeOf((*MockWebhookEntry)(nil).GetTime))
}
