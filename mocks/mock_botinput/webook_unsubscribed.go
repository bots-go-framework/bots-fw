// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bots-go-framework/bots-fw/botinput (interfaces: WebhookUnsubscribed)
//
// Generated by this command:
//
//	mockgen github.com/bots-go-framework/bots-fw/botinput WebhookUnsubscribed
//

// Package mock_botinput is a generated GoMock package.
package mock_botinput

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockWebhookUnsubscribed is a mock of WebhookUnsubscribed interface.
type MockWebhookUnsubscribed struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookUnsubscribedMockRecorder
	isgomock struct{}
}

// MockWebhookUnsubscribedMockRecorder is the mock recorder for MockWebhookUnsubscribed.
type MockWebhookUnsubscribedMockRecorder struct {
	mock *MockWebhookUnsubscribed
}

// NewMockWebhookUnsubscribed creates a new mock instance.
func NewMockWebhookUnsubscribed(ctrl *gomock.Controller) *MockWebhookUnsubscribed {
	mock := &MockWebhookUnsubscribed{ctrl: ctrl}
	mock.recorder = &MockWebhookUnsubscribedMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookUnsubscribed) EXPECT() *MockWebhookUnsubscribedMockRecorder {
	return m.recorder
}

// UnsubscribedMessage mocks base method.
func (m *MockWebhookUnsubscribed) UnsubscribedMessage() any {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnsubscribedMessage")
	ret0, _ := ret[0].(any)
	return ret0
}

// UnsubscribedMessage indicates an expected call of UnsubscribedMessage.
func (mr *MockWebhookUnsubscribedMockRecorder) UnsubscribedMessage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnsubscribedMessage", reflect.TypeOf((*MockWebhookUnsubscribed)(nil).UnsubscribedMessage))
}
