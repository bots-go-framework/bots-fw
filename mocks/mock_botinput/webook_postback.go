// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bots-go-framework/bots-fw/botinput (interfaces: WebhookPostback)
//
// Generated by this command:
//
//	mockgen github.com/bots-go-framework/bots-fw/botinput WebhookPostback
//

// Package mock_botinput is a generated GoMock package.
package mock_botinput

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockWebhookPostback is a mock of WebhookPostback interface.
type MockWebhookPostback struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookPostbackMockRecorder
	isgomock struct{}
}

// MockWebhookPostbackMockRecorder is the mock recorder for MockWebhookPostback.
type MockWebhookPostbackMockRecorder struct {
	mock *MockWebhookPostback
}

// NewMockWebhookPostback creates a new mock instance.
func NewMockWebhookPostback(ctrl *gomock.Controller) *MockWebhookPostback {
	mock := &MockWebhookPostback{ctrl: ctrl}
	mock.recorder = &MockWebhookPostbackMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookPostback) EXPECT() *MockWebhookPostbackMockRecorder {
	return m.recorder
}

// Payload mocks base method.
func (m *MockWebhookPostback) Payload() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Payload")
	ret0, _ := ret[0].(string)
	return ret0
}

// Payload indicates an expected call of Payload.
func (mr *MockWebhookPostbackMockRecorder) Payload() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Payload", reflect.TypeOf((*MockWebhookPostback)(nil).Payload))
}

// PostbackMessage mocks base method.
func (m *MockWebhookPostback) PostbackMessage() any {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostbackMessage")
	ret0, _ := ret[0].(any)
	return ret0
}

// PostbackMessage indicates an expected call of PostbackMessage.
func (mr *MockWebhookPostbackMockRecorder) PostbackMessage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostbackMessage", reflect.TypeOf((*MockWebhookPostback)(nil).PostbackMessage))
}
