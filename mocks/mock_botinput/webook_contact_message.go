// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bots-go-framework/bots-fw/botinput (interfaces: WebhookContactMessage)
//
// Generated by this command:
//
//	mockgen github.com/bots-go-framework/bots-fw/botinput WebhookContactMessage
//

// Package mock_botinput is a generated GoMock package.
package mock_botinput

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockWebhookContactMessage is a mock of WebhookContactMessage interface.
type MockWebhookContactMessage struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookContactMessageMockRecorder
	isgomock struct{}
}

// MockWebhookContactMessageMockRecorder is the mock recorder for MockWebhookContactMessage.
type MockWebhookContactMessageMockRecorder struct {
	mock *MockWebhookContactMessage
}

// NewMockWebhookContactMessage creates a new mock instance.
func NewMockWebhookContactMessage(ctrl *gomock.Controller) *MockWebhookContactMessage {
	mock := &MockWebhookContactMessage{ctrl: ctrl}
	mock.recorder = &MockWebhookContactMessageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookContactMessage) EXPECT() *MockWebhookContactMessageMockRecorder {
	return m.recorder
}

// GetBotUserID mocks base method.
func (m *MockWebhookContactMessage) GetBotUserID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBotUserID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBotUserID indicates an expected call of GetBotUserID.
func (mr *MockWebhookContactMessageMockRecorder) GetBotUserID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBotUserID", reflect.TypeOf((*MockWebhookContactMessage)(nil).GetBotUserID))
}

// GetFirstName mocks base method.
func (m *MockWebhookContactMessage) GetFirstName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFirstName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFirstName indicates an expected call of GetFirstName.
func (mr *MockWebhookContactMessageMockRecorder) GetFirstName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFirstName", reflect.TypeOf((*MockWebhookContactMessage)(nil).GetFirstName))
}

// GetLastName mocks base method.
func (m *MockWebhookContactMessage) GetLastName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLastName indicates an expected call of GetLastName.
func (mr *MockWebhookContactMessageMockRecorder) GetLastName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastName", reflect.TypeOf((*MockWebhookContactMessage)(nil).GetLastName))
}

// GetPhoneNumber mocks base method.
func (m *MockWebhookContactMessage) GetPhoneNumber() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPhoneNumber")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPhoneNumber indicates an expected call of GetPhoneNumber.
func (mr *MockWebhookContactMessageMockRecorder) GetPhoneNumber() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPhoneNumber", reflect.TypeOf((*MockWebhookContactMessage)(nil).GetPhoneNumber))
}

// GetVCard mocks base method.
func (m *MockWebhookContactMessage) GetVCard() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVCard")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetVCard indicates an expected call of GetVCard.
func (mr *MockWebhookContactMessageMockRecorder) GetVCard() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVCard", reflect.TypeOf((*MockWebhookContactMessage)(nil).GetVCard))
}
