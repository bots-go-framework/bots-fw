// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bots-go-framework/bots-fw/botinput (interfaces: SharedUserMessageItem)
//
// Generated by this command:
//
//	mockgen github.com/bots-go-framework/bots-fw/botinput SharedUserMessageItem
//

// Package mock_botinput is a generated GoMock package.
package mock_botinput

import (
	reflect "reflect"

	botinput "github.com/bots-go-framework/bots-fw/botinput"
	gomock "go.uber.org/mock/gomock"
)

// MockSharedUserMessageItem is a mock of SharedUserMessageItem interface.
type MockSharedUserMessageItem struct {
	ctrl     *gomock.Controller
	recorder *MockSharedUserMessageItemMockRecorder
	isgomock struct{}
}

// MockSharedUserMessageItemMockRecorder is the mock recorder for MockSharedUserMessageItem.
type MockSharedUserMessageItemMockRecorder struct {
	mock *MockSharedUserMessageItem
}

// NewMockSharedUserMessageItem creates a new mock instance.
func NewMockSharedUserMessageItem(ctrl *gomock.Controller) *MockSharedUserMessageItem {
	mock := &MockSharedUserMessageItem{ctrl: ctrl}
	mock.recorder = &MockSharedUserMessageItemMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSharedUserMessageItem) EXPECT() *MockSharedUserMessageItemMockRecorder {
	return m.recorder
}

// GetBotUserID mocks base method.
func (m *MockSharedUserMessageItem) GetBotUserID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBotUserID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBotUserID indicates an expected call of GetBotUserID.
func (mr *MockSharedUserMessageItemMockRecorder) GetBotUserID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBotUserID", reflect.TypeOf((*MockSharedUserMessageItem)(nil).GetBotUserID))
}

// GetFirstName mocks base method.
func (m *MockSharedUserMessageItem) GetFirstName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFirstName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFirstName indicates an expected call of GetFirstName.
func (mr *MockSharedUserMessageItemMockRecorder) GetFirstName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFirstName", reflect.TypeOf((*MockSharedUserMessageItem)(nil).GetFirstName))
}

// GetLastName mocks base method.
func (m *MockSharedUserMessageItem) GetLastName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLastName indicates an expected call of GetLastName.
func (mr *MockSharedUserMessageItemMockRecorder) GetLastName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastName", reflect.TypeOf((*MockSharedUserMessageItem)(nil).GetLastName))
}

// GetPhotos mocks base method.
func (m *MockSharedUserMessageItem) GetPhotos() []botinput.PhotoMessageItem {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPhotos")
	ret0, _ := ret[0].([]botinput.PhotoMessageItem)
	return ret0
}

// GetPhotos indicates an expected call of GetPhotos.
func (mr *MockSharedUserMessageItemMockRecorder) GetPhotos() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPhotos", reflect.TypeOf((*MockSharedUserMessageItem)(nil).GetPhotos))
}

// GetUsername mocks base method.
func (m *MockSharedUserMessageItem) GetUsername() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsername")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUsername indicates an expected call of GetUsername.
func (mr *MockSharedUserMessageItemMockRecorder) GetUsername() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsername", reflect.TypeOf((*MockSharedUserMessageItem)(nil).GetUsername))
}
