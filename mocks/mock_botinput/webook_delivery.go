// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bots-go-framework/bots-fw/botinput (interfaces: WebhookDelivery)
//
// Generated by this command:
//
//	mockgen github.com/bots-go-framework/bots-fw/botinput WebhookDelivery
//

// Package mock_botinput is a generated GoMock package.
package mock_botinput

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockWebhookDelivery is a mock of WebhookDelivery interface.
type MockWebhookDelivery struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookDeliveryMockRecorder
	isgomock struct{}
}

// MockWebhookDeliveryMockRecorder is the mock recorder for MockWebhookDelivery.
type MockWebhookDeliveryMockRecorder struct {
	mock *MockWebhookDelivery
}

// NewMockWebhookDelivery creates a new mock instance.
func NewMockWebhookDelivery(ctrl *gomock.Controller) *MockWebhookDelivery {
	mock := &MockWebhookDelivery{ctrl: ctrl}
	mock.recorder = &MockWebhookDeliveryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookDelivery) EXPECT() *MockWebhookDeliveryMockRecorder {
	return m.recorder
}

// Payload mocks base method.
func (m *MockWebhookDelivery) Payload() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Payload")
	ret0, _ := ret[0].(string)
	return ret0
}

// Payload indicates an expected call of Payload.
func (mr *MockWebhookDeliveryMockRecorder) Payload() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Payload", reflect.TypeOf((*MockWebhookDelivery)(nil).Payload))
}
